
package xu.sheng.jiang.web_client.xu.sheng.jiang.operation;

import javax.jws.WebMethod;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebService(name = "WebServicePublish", targetNamespace = "http://operation.jiang.sheng.xu/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface WebServicePublish {


    /**
     * 
     * @return
     *     returns java.lang.String
     * @throws Exception_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "differentFromMethodName", targetNamespace = "http://operation.jiang.sheng.xu/", className = "xu.sheng.jiang.operation.DifferentFromMethodName")
    @ResponseWrapper(localName = "differentFromMethodNameResponse", targetNamespace = "http://operation.jiang.sheng.xu/", className = "xu.sheng.jiang.operation.DifferentFromMethodNameResponse")
    @Action(input = "http://operation.jiang.sheng.xu/WebServicePublish/differentFromMethodNameRequest", output = "http://operation.jiang.sheng.xu/WebServicePublish/differentFromMethodNameResponse", fault = {
        @FaultAction(className = Exception_Exception.class, value = "http://operation.jiang.sheng.xu/WebServicePublish/differentFromMethodName/Fault/Exception")
    })
    public String differentFromMethodName()
        throws Exception_Exception
    ;

}
